---
import TrashCanIcon from "@components/icons/TrashCanIcon.astro";
import ListOfMoviesEmptyState from "@components/ListOfMoviesEmptyState.astro";
import MovieCard from "@components/MovieCard.astro";
import type { Movie } from "../types/movies";

interface Props {
  movies: Movie[];
}

const { movies } = Astro.props;
---

<div class="tabs">
  <button class="tab active" data-filter="all">Todos</button>
  <button class="tab" data-filter="watched">Vistos</button>
  <button class="tab" data-filter="unwatched">Por ver</button>
</div>

<div class="movie-grid">
  {movies.map((movie) => <MovieCard movie={movie} />)}
</div>

<ListOfMoviesEmptyState movies={movies} />

<template id="movie-template">
  <div class="movie-card" data-status="" data-id="">
    <img src="" alt="Movie poster" />
    <div class="movie-info">
      <h3></h3>
      <p></p>
    </div>
    <div class="hover-options">
      <button class="watch-btn"></button>
    </div>
    <button class="trash-btn" aria-label="Delete movie">
      <TrashCanIcon />
    </button>
  </div>
</template>

<style>
  .tabs {
    display: flex;
    justify-content: center;
    margin-bottom: 2rem;
  }
  .tab {
    background-color: #2c2c2c;
    border: none;
    color: white;
    padding: 0.5rem 1rem;
    margin: 0 0.5rem;
    cursor: pointer;
    border-radius: 5px;
    transition: background-color 0.3s;
  }
  .tab.active,
  .tab:hover {
    background-color: rgb(var(--accent));
  }
  .movie-grid {
    display: grid;
    padding-inline: 8px;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 2rem;
  }
</style>

<script>
  import { $, $$ } from "@lib/dom";

  const tabs = $$<HTMLButtonElement>(".tab");
    const $emptyState = $("#empty-state");
    
    const loadFilteredMovies = (filter: string) => {
    const movieCards = $$(".movie-card");
    let showCount = 0;

    movieCards.forEach((card) => {
      if (filter === "all" || card.dataset.status === filter) {
        card.style.display = "block";
        showCount++;
      } else {
        card.style.display = "none";
      }
    });

    if ($emptyState === null) return;

    if (showCount === 0) {
      $emptyState.style.display = "block";
    } else {
      $emptyState.style.display = "none";
    }
  };

  tabs.forEach((tab) => {
    tab.addEventListener("click", () => {
      tabs.forEach((t) => t.classList.remove("active"));
      tab.classList.add("active");
      const filter = tab.dataset.filter;
      loadFilteredMovies(filter ?? "all");
    });
  });
</script>
